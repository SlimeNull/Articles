<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on 诺尔的小窝</title><link>https://slimenull.top/tags/c#/</link><description>Recent content in C# on 诺尔的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 26 Mar 2022 22:21:12 +0800</lastBuildDate><atom:link href="https://slimenull.top/tags/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>[C#] EleCho.Json: 便捷, 简单以及高速的 JSON 操作</title><link>https://slimenull.top/post/csharp-elechojson/</link><pubDate>Sat, 26 Mar 2022 22:21:12 +0800</pubDate><guid>https://slimenull.top/post/csharp-elechojson/</guid><description>&lt;p>便捷, 简单以及高速的 JSON 读写器. 同时以也可以使用实体类来操作 JSON 数据.&lt;/p></description></item><item><title>[C#] 二进制, 十进制, 十六进制, 进制转换</title><link>https://slimenull.top/post/csharp-bindigithexconvert/</link><pubDate>Tue, 06 Apr 2021 22:37:59 +0800</pubDate><guid>https://slimenull.top/post/csharp-bindigithexconvert/</guid><description>&lt;p>C# 的各个进制互相转换 格式化字符串, Convert类&lt;/p></description></item><item><title>[踩坑记录] .NET Core, Delegate.BeginInvoke, PlatformNotSupportedException</title><link>https://slimenull.top/post/error-dotnet-delegatebegininvoke/</link><pubDate>Tue, 09 Mar 2021 21:48:03 +0800</pubDate><guid>https://slimenull.top/post/error-dotnet-delegatebegininvoke/</guid><description>&lt;p>.NET Core 不支持委托的 BeginInvoke 方法, 使用别的方法, 例如 Task 来替代它!&lt;/p></description></item><item><title>[干货] 一篇文章完全搞懂面向对象基本概念</title><link>https://slimenull.top/post/sth-objective/</link><pubDate>Sun, 07 Mar 2021 16:15:50 +0800</pubDate><guid>https://slimenull.top/post/sth-objective/</guid><description>&lt;p>类 对象 示例 行为 属性, 用最通俗移动的语言来讲述面向对象&lt;/p></description></item><item><title>[C#] 好耶! 是幻影坦克! 原理讲解, 完整类库, 现成代码.</title><link>https://slimenull.top/post/csharp-phantomtank/</link><pubDate>Wed, 03 Mar 2021 16:44:09 +0800</pubDate><guid>https://slimenull.top/post/csharp-phantomtank/</guid><description>&lt;p>啥是幻影坦克, 一张黑白图片, 在黑色背景下和白色背景下能够显示出不同的图像. 其基本原理是空指图片的颜色与不透明度以使图片在不同的背景下显现出不同的颜色.&lt;/p></description></item><item><title>[C#] 就让这张图片来揭露你的本性吧! 老绅士.</title><link>https://slimenull.top/post/csharp-hentaiimg/</link><pubDate>Sun, 21 Feb 2021 23:08:37 +0800</pubDate><guid>https://slimenull.top/post/csharp-hentaiimg/</guid><description>&lt;p>在一张图片中填满字, 或者用字来构成一整张彩色图片&lt;/p></description></item><item><title>[C#] 绘制函数图像! 可拖动, 可缩放, 可调整精度</title><link>https://slimenull.top/post/csharp-drawfunc/</link><pubDate>Fri, 19 Feb 2021 22:00:53 +0800</pubDate><guid>https://slimenull.top/post/csharp-drawfunc/</guid><description>&lt;p>WinForm, 借助 Graphics 绘制函数图像, 可拖动, 可缩放, 可调整精度, 可自定义表达式&lt;/p></description></item><item><title>[.NET] WPF 数据绑定与 MVVM 模型</title><link>https://slimenull.top/post/csharp-wpfmvvm/</link><pubDate>Mon, 15 Feb 2021 18:13:33 +0800</pubDate><guid>https://slimenull.top/post/csharp-wpfmvvm/</guid><description>&lt;p>欸? 听说你还在使用 Dispatcher 来设置与获取数据? 落后啦! 快来试试 MVVM 吧!&lt;/p></description></item><item><title>[C#] Range 函数, 方便快捷</title><link>https://slimenull.top/post/csharp-rangefunc/</link><pubDate>Mon, 15 Feb 2021 18:13:33 +0800</pubDate><guid>https://slimenull.top/post/csharp-rangefunc/</guid><description>&lt;p>包含了所有常用的数字循环&lt;/p></description></item><item><title>[C#/VB.NET] C# 与 VB.NET 的类库跨语言引用</title><link>https://slimenull.top/post/dotnet-crosslangdllref/</link><pubDate>Mon, 15 Feb 2021 01:57:02 +0800</pubDate><guid>https://slimenull.top/post/dotnet-crosslangdllref/</guid><description>&lt;p>C# 与 VB.NET 同样基于 .NET, 编译后的 MSIL 当然都是由 .NET Runtime 来执行, 所以互相调用完全合理&lt;/p></description></item><item><title>[C#] 音乐播放 3 种方式 Demo 与 MCI 音乐播放器封装类</title><link>https://slimenull.top/post/csharp-playmusic/</link><pubDate>Thu, 11 Feb 2021 10:42:39 +0800</pubDate><guid>https://slimenull.top/post/csharp-playmusic/</guid><description>&lt;p>SoundPlayer, MciCommandString, NAudio 三种方式播放音频示例&lt;/p></description></item><item><title>[Win32] MCI 详解与封装类, MCI 播放音乐, 获取播放状态, 获取音频长度, 进度调整</title><link>https://slimenull.top/post/win32-mci/</link><pubDate>Thu, 11 Feb 2021 10:21:11 +0800</pubDate><guid>https://slimenull.top/post/win32-mci/</guid><description>&lt;p>MCI 打开文件, 播放, 暂停, 停止音频, 设定播放进度, 获取播放进度&lt;/p></description></item><item><title>[Win32] GetShortPathName详解, 长路径转换为短路径</title><link>https://slimenull.top/post/win32-getshortpathname/</link><pubDate>Tue, 09 Feb 2021 08:05:35 +0800</pubDate><guid>https://slimenull.top/post/win32-getshortpathname/</guid><description>&lt;p>借助 WinApi 即可实现长路径转换为短路径&lt;/p></description></item><item><title>[C#] WinForm 与 WPF 获取命令行参数</title><link>https://slimenull.top/post/csharp-winformandwpfgetcommandlineargs/</link><pubDate>Tue, 09 Feb 2021 03:04:19 +0800</pubDate><guid>https://slimenull.top/post/csharp-winformandwpfgetcommandlineargs/</guid><description>&lt;p>使用 Environment.GetCommandLineArgs() 即可, 但是需要去除第一个元素, 因为第一个元素时文件自身路径&lt;/p></description></item><item><title>[踩坑记录] C# 源代码被误删, 通过反编译之前编译好的文件来拯救这一切, 三款反编译工具对比</title><link>https://slimenull.top/post/error-dotnet-decompileyourdeletedcode/</link><pubDate>Sat, 06 Feb 2021 01:24:02 +0000</pubDate><guid>https://slimenull.top/post/error-dotnet-decompileyourdeletedcode/</guid><description>&lt;p>结果是 ILSpy 效果最棒, dotPeek 启动速度慢, dnSpy反编译效果差&lt;/p></description></item><item><title>[踩坑记录] 某功能在C#7.3中不可用,请使用 8.0 或更高的语言版本 (通用解决方案)</title><link>https://slimenull.top/post/error-dotnet-featureinvalid/</link><pubDate>Sat, 06 Feb 2021 00:26:32 +0800</pubDate><guid>https://slimenull.top/post/error-dotnet-featureinvalid/</guid><description>&lt;p>使用自动修复或者手动编辑项目文件指定语言版本&lt;/p></description></item><item><title>[C#] 单文件编译 - 编译时嵌入dll</title><link>https://slimenull.top/post/csharp-embeddll/</link><pubDate>Wed, 03 Feb 2021 06:56:00 +0800</pubDate><guid>https://slimenull.top/post/csharp-embeddll/</guid><description>&lt;p>直接安装 Costura.Fody 库就能使项目单文件编译啦~&lt;/p></description></item><item><title>[项目实例] 使用 IronPython 库来创建一个支持使用Python脚本操作的简易文本编辑器</title><link>https://slimenull.top/post/csharp-ironpytxteditor/</link><pubDate>Wed, 03 Feb 2021 06:43:09 +0800</pubDate><guid>https://slimenull.top/post/csharp-ironpytxteditor/</guid><description>&lt;p>支持使用 Python 脚本来操作文本内容的简单编辑器&lt;/p></description></item><item><title>[C#] Stream 支持写入读取触发事件的类库</title><link>https://slimenull.top/post/csharp-triggerstream/</link><pubDate>Wed, 03 Feb 2021 03:02:37 +0800</pubDate><guid>https://slimenull.top/post/csharp-triggerstream/</guid><description>&lt;p>在写入, 读取, 寻址时触发事件的Stream&lt;/p></description></item><item><title>[踩坑记录] ASP.NET Core System.Data.SqlTypes.SqlNullValueException: 数据为空。不能对空值调用此方法</title><link>https://slimenull.top/post/aspnet-sqlnull/</link><pubDate>Fri, 29 Jan 2021 05:07:08 +0800</pubDate><guid>https://slimenull.top/post/aspnet-sqlnull/</guid><description>&lt;p>添加空值检查或者直接设置数据库字段不可空&lt;/p></description></item><item><title>[C#] TOC Tiny - 基于 TCP 套接字的简易网络聊天室</title><link>https://slimenull.top/post/csharp-simplechat/</link><pubDate>Thu, 31 Dec 2020 01:08:08 +0800</pubDate><guid>https://slimenull.top/post/csharp-simplechat/</guid><description>&lt;p>WPF 网络聊天小程序, 最新版已经支持图像发送&lt;/p></description></item><item><title>[C#] 控制台动态输入</title><link>https://slimenull.top/post/csharp-dynamicinput2/</link><pubDate>Wed, 30 Dec 2020 22:33:07 +0800</pubDate><guid>https://slimenull.top/post/csharp-dynamicinput2/</guid><description>&lt;p>在输入的过程中就能获取, 设置已经输入的内容, 甚至移动输入内容在控制台中的显示位置&lt;/p></description></item><item><title>[Linux] Ubuntu 新手引导 - 中文输入法配置</title><link>https://slimenull.top/post/linux-ubuntu-zhinput/</link><pubDate>Thu, 17 Dec 2020 23:39:37 +0800</pubDate><guid>https://slimenull.top/post/linux-ubuntu-zhinput/</guid><description>从输入法框架, 输入法引擎到输入法源的完全配置 选择输入法框架： Linux中，有多个输入法框架可供使用，在 Ubuntu 中，默认预装了 ibus 这款输入法引擎，常用</description></item><item><title>[C#] 使用 GDI+ 在控制台绘图</title><link>https://slimenull.top/post/csharp-consolegdi/</link><pubDate>Sun, 15 Nov 2020 21:59:01 +0800</pubDate><guid>https://slimenull.top/post/csharp-consolegdi/</guid><description>&lt;p>直接通过 WinAPI 获取控制台窗口句柄, 然后创建 Graphics 对象, 就可以肆无忌惮的画图了&lt;/p></description></item><item><title>[C#] 运算包含数学表达式的字符串</title><link>https://slimenull.top/post/csharp-mathexprcalc/</link><pubDate>Thu, 29 Oct 2020 11:41:22 +0800</pubDate><guid>https://slimenull.top/post/csharp-mathexprcalc/</guid><description>&lt;p>这是一个手写的算法，用于计算字符串中包含的数学表达式, 其原理是通过解析字符串中的 token, 分析表达式, 并计算结果.&lt;/p></description></item><item><title>[C#] 使用 CHO.Json 操作 Json 数据</title><link>https://slimenull.top/post/csharp-chojson/</link><pubDate>Wed, 28 Oct 2020 23:52:44 +0800</pubDate><guid>https://slimenull.top/post/csharp-chojson/</guid><description>&lt;p>(旧的) CHO.Json 是我所写的 JSON 解析器, 你可以使用它操作 JSON 数据, 包括序列化, 反序列化.&lt;/p></description></item><item><title>[C#] 计算字符串在控制台上显示的宽度, 包含所有Char能表示的字符</title><link>https://slimenull.top/post/csharp-getcharwidthinconsole/</link><pubDate>Wed, 28 Oct 2020 23:27:11 +0800</pubDate><guid>https://slimenull.top/post/csharp-getcharwidthinconsole/</guid><description>&lt;p>通过运算, 获取字符串在控制台上显示的宽度, 例如中文字符宽2, 英文字符宽1&lt;/p></description></item><item><title>[C#] 循环所有可能的字符</title><link>https://slimenull.top/post/csharp-enumallchars/</link><pubDate>Mon, 26 Oct 2020 15:59:44 +0800</pubDate><guid>https://slimenull.top/post/csharp-enumallchars/</guid><description>&lt;p>通过 char.MaxValue 来作为循环结尾, 将int强制转换为char, 即可&lt;/p></description></item><item><title>[C#] 各种关于类型与反射的常用操作.</title><link>https://slimenull.top/post/csharp-commonlyusedreflection/</link><pubDate>Mon, 19 Oct 2020 21:16:01 +0800</pubDate><guid>https://slimenull.top/post/csharp-commonlyusedreflection/</guid><description>&lt;p>类型操作, 根据Type进行类型转换, 接口获取与比较, 泛型接口获取与比较, 类的字段获取与设置.&lt;/p></description></item><item><title>[踩坑记录] Image.Save 遇到 A generic error occurred in GDI+ 异常</title><link>https://slimenull.top/post/csharp-gdigenericerror/</link><pubDate>Wed, 26 Aug 2020 21:59:19 +0800</pubDate><guid>https://slimenull.top/post/csharp-gdigenericerror/</guid><description>&lt;ol>
&lt;li>先看自己路径是不是错了&lt;/li>
&lt;li>然后看自己的路径表达是不是不符合标准, 例如这样的&amp;quot;/ewq_00010.png&amp;quot;, 它指向C:\根目录下的一个文件! 而.NET中一般不允许对那里进行写操作&lt;/li>
&lt;/ol></description></item><item><title>[C#] 实现鼠标拖动控件移动</title><link>https://slimenull.top/post/csharp-controldragmove/</link><pubDate>Mon, 06 Jul 2020 06:52:50 +0800</pubDate><guid>https://slimenull.top/post/csharp-controldragmove/</guid><description>&lt;p>对鼠标拖动实现控件移动的原理详解, 以及使用类将功能封装, 实现一个类管理多个控件的拖动.&lt;/p></description></item><item><title>[C#] 如何创建DLL并在项目中使用</title><link>https://slimenull.top/post/csharp-createdynamiclinklibrary/</link><pubDate>Sun, 05 Jul 2020 01:05:33 +0800</pubDate><guid>https://slimenull.top/post/csharp-createdynamiclinklibrary/</guid><description>&lt;p>适合初学者的, 从 0 开始的 .NET C# 动态链接库(dll)创建教程&lt;/p></description></item><item><title>[C#] 无需实体类, 解析读写Json</title><link>https://slimenull.top/post/csharp-operatejsonwithoutmodel/</link><pubDate>Thu, 02 Jul 2020 23:24:19 +0800</pubDate><guid>https://slimenull.top/post/csharp-operatejsonwithoutmodel/</guid><description>&lt;p>(旧的) 自己实现的一个 Json 解析, 操作类, 可以使你像 Python 那样弱类型般操作 Json 数据&lt;/p></description></item><item><title>[C#] 数组去重: 超高速字符串去重 (可保留原顺序)</title><link>https://slimenull.top/post/csharp-removeduplicatestring/</link><pubDate>Sat, 27 Jun 2020 05:43:32 +0800</pubDate><guid>https://slimenull.top/post/csharp-removeduplicatestring/</guid><description>&lt;p>数组去重, 如果使用遍历并检查 Contains 的方法, 那么在处理大量数据的时候未免太慢, 另一种方法是先进行排序(例如桶排序), 那么只需要遍历一次就可以去除重复&lt;/p></description></item><item><title>[C#] 排序算法: 超高速根据字符串长度排序的算法</title><link>https://slimenull.top/post/csharp-fastsortbylength/</link><pubDate>Fri, 26 Jun 2020 02:04:05 +0800</pubDate><guid>https://slimenull.top/post/csharp-fastsortbylength/</guid><description>&lt;p>使用 Dictionary 和 List, 桶排序实现超高速根据字符串长度排序字符串数组&lt;/p></description></item><item><title>[C#] Image的Image.GetThumbnailImage(获取缩略图)方法实际是缩放与拉伸</title><link>https://slimenull.top/post/csharp-aboutthumbimage/</link><pubDate>Tue, 26 May 2020 05:10:54 +0800</pubDate><guid>https://slimenull.top/post/csharp-aboutthumbimage/</guid><description>&lt;p>经过测试,Image.GetThumbnailImage 方法并不只是获取缩略图,你甚至可以拿它来放大图片, 以及更多骚操作&lt;/p></description></item><item><title>[C#] 实现简单聊天气泡</title><link>https://slimenull.top/post/csharp-chatbubble/</link><pubDate>Wed, 22 Apr 2020 08:10:50 +0800</pubDate><guid>https://slimenull.top/post/csharp-chatbubble/</guid><description>&lt;p>在 WinForm 中借助 Panel 来实现简单的聊天气泡, 用户昵称, 头像, 以及消息的左右侧放置, 直接在项目中引用代码即可.&lt;/p></description></item><item><title>[C#] 从网络上下载文件</title><link>https://slimenull.top/post/csharp-downloadfile/</link><pubDate>Thu, 16 Apr 2020 03:23:54 +0800</pubDate><guid>https://slimenull.top/post/csharp-downloadfile/</guid><description>&lt;p>之前一直不理解如何是从网络上下载文件的&amp;hellip;自己试了试懂了, 使用 WebRerequest, 然后获取响应, 拷贝到文件流中即可.&lt;/p></description></item><item><title>[C#] 动态输入</title><link>https://slimenull.top/post/csharp-dynamicinput/</link><pubDate>Mon, 06 Apr 2020 03:48:49 +0800</pubDate><guid>https://slimenull.top/post/csharp-dynamicinput/</guid><description>&lt;p>(旧的) 在使用 Console.ReadLine 的时候, 用户不按回车确认, 你就无法获取用户输入了什么内容, 于是我封装了一个类实现获取用户输入内容&lt;/p></description></item></channel></rss>